name: CI

on:
  push:
    branches: [ "main" ]
  pull_request: {}

env:
  CARGO_TERM_COLOR: always
  NIGHTLY_RUST_VERSION: nightly-2023-05-17

jobs:
  build-and-populate-cache:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.NIGHTLY_RUST_VERSION }}

      - uses: Swatinem/rust-cache@v2

      - name: Cache RISC-V tests
        id: cache-built-tests
        uses: actions/cache@v3
        with:
          path: vm/tests/testdata
          key: ${{ runner.os }}-riscv-tests-${{ github.ref_name }}
          restore-keys: ${{ runner.os }}-riscv-tests-${{ github.ref_name }}

      - name: Set up Docker Buildx
        if: ${{ steps.cache-built-tests.outputs.cache-hit != 'true' }}
        uses: docker/setup-buildx-action@v2

      - name: Build RISC-V test suite
        if: ${{ steps.cache-built-tests.outputs.cache-hit != 'true' }}
        run: |
          cargo build

      # This is useful for inspecting what exactly was built during the run.
      - name: Upload riscv-tests build artifacts
        if: ${{ steps.cache-built-tests.outputs.cache-hit != 'true' }}
        uses: actions/upload-artifact@v3
        with:
          name: riscv-tests
          path: vm/tests/testdata

  cargo-test:
    needs: "build-and-populate-cache"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.NIGHTLY_RUST_VERSION }}

      - uses: Swatinem/rust-cache@v2

      - name: Cache RISC-V tests
        id: cache-built-tests
        uses: actions/cache@v3
        with:
          path: vm/tests/testdata
          key: ${{ runner.os }}-riscv-tests-${{ github.ref_name }}
          restore-keys: ${{ runner.os }}-riscv-tests-${{ github.ref_name }}

      - name: Run tests
        run: cargo test --locked --all-targets

  cargo-clippy:
    needs: "build-and-populate-cache"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.NIGHTLY_RUST_VERSION }}
          components: clippy

      - uses: Swatinem/rust-cache@v2

      - name: Cache RISC-V tests
        id: cache-built-tests
        uses: actions/cache@v3
        with:
          path: vm/tests/testdata
          key: ${{ runner.os }}-riscv-tests-${{ github.ref_name }}
          restore-keys: ${{ runner.os }}-riscv-tests-${{ github.ref_name }}

      - name: Run Clippy linter
        run: cargo clippy --all-features --all-targets -- -D warnings

  cargo-fmt:
    needs: "build-and-populate-cache"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.NIGHTLY_RUST_VERSION }}

      - uses: Swatinem/rust-cache@v2

      - name: Cache RISC-V tests
        id: cache-built-tests
        uses: actions/cache@v3
        with:
          path: vm/tests/testdata
          key: ${{ runner.os }}-riscv-tests-${{ github.ref_name }}
          restore-keys: ${{ runner.os }}-riscv-tests-${{ github.ref_name }}

      - name: Run fmt
        run: cargo fmt --all --check
