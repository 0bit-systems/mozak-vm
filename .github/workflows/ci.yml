name: CI

on:
  push:
    branches: [ "main" ]
  pull_request: {}

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  NIGHTLY_RUST_VERSION: nightly-2023-05-17

jobs:
  check-riscv-tests:
    name: "Check Risc-V Tests are up to date"
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
      - run: |
          git ls-remote --quiet --heads https://github.com/riscv/riscv-tests.git master |
            grep --only '^[^[:space:]]*' |
            tee vm/tests/testdata/.testdata_generated_from_this_commit
          git diff --exit-code || {
            echo "::error RiscV tests are out of date";
            cat vm/tests/create_testdata/error_message.markdown >> ${GITHUB_STEP_SUMMARY};
            false
          }

  cargo-test:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.NIGHTLY_RUST_VERSION }}

      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: "default"
          save-if: "true"

      - name: Run tests
        run: cargo test --locked --all-targets

  cargo-clippy:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.NIGHTLY_RUST_VERSION }}
          components: clippy

      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: "default"
          save-if: "false"

      - name: Run Clippy linter
        run: cargo clippy --all-features --all-targets -- -D warnings

  cargo-fmt:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.NIGHTLY_RUST_VERSION }}

      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: "default"
          save-if: "false"
      - name: Run fmt
        run: cargo fmt --all --check

  coverage:
    runs-on: self-hosted
    permissions:
      issues: read
      contents: write
      packages: read
      pull-requests: write
      checks: write
      pages: write
      discussions: write
    steps:
      - uses: actions/checkout@v3
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.NIGHTLY_RUST_VERSION }}

      - uses: Swatinem/rust-cache@v2
        with:
          # tarpaulin runs with different RUSTFLAGS, so we need a different cache.
          shared-key: "tarpaulin"
          workspaces: ". -> target-tarpaulin"
          save-if: "true"

      - name: "Install coverage tool: cargo tarpaulin"
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-tarpaulin

      - name: Run tests for coverage
        # skip-clean is there to make tarpaulin not re-build unnecessarily,
        # so caching dependencies works.
        run: cargo tarpaulin --skip-clean --engine llvm --locked --workspace --out Xml --target-dir target-tarpaulin

      - name: Coverage Comment
        uses: ewjoachim/coverage-comment-action@v1.0.3
        with:
          COVERAGE_FILE: "cobertura.xml"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: 5monkeys/cobertura-action@master
        with:
          path: cobertura.xml
          minimum_coverage: 0

  cargo-udeps:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.NIGHTLY_RUST_VERSION }}

      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: "default"
          save-if: "false"

      - name: Run cargo-udeps
        uses: aig787/cargo-udeps-action@v1
        with:
          args: '--workspace --all-targets --all-features'
