name: Install CI deps
description: "Install dependencies needed to run CI jobs"

inputs:
  cache-key:
    required: false
    description: "Cache key for caching Rust artifacts"
  runner-label:
    required: true
    description: "label for the runner the action will be executed on"
  GITHUB_TOKEN:
    required: true
    description: "GITHUB_TOKEN needed to make GitHub API requests"

runs:
  using: "composite"

  steps:
    - name: Install Nix
      uses: DeterminateSystems/nix-installer-action@v8
      with:
        github-token: ${{ inputs.GITHUB_TOKEN }}
        # Do not use systemd on self-hosted runners
        init: ${{ inputs.runner-label == 'self-hosted' && 'none' || 'systemd'}}

    - name: Set up Nix cache
      uses: DeterminateSystems/magic-nix-cache-action@v3

    - name: Install CI deps
      shell: bash
      run: |
        # Upgrade or Install CI Deps
        # Warning, nix profile upgrade does not return error code on failure
        nix profile install .#ci-deps || nix profile upgrade .#ci-deps
        : installed_profile=$(nix profile list | grep 'attribute.*ci-deps' -B 1 -A 3)
        : installed=$(echo $installed_profile | grep 'nix/store' | cut -f2 -d':' | tr -d' ')
        : local=$(nix eval --raw .#ci-deps.outPath)
        # Sanity check if we successfully installed/upgraded ci-deps
        test "$installed" = "$local"
        # Mark older versions of profile for deletion
        nix profile wipe-history --older-than 30d
        # Set up CI environment
        nix run .#ci-env >> $GITHUB_ENV

    - id: get-info
      name: Get info
      shell: bash
      run: |
        RUST_VERSION="$(taplo get -f rust-toolchain.toml 'toolchain.channel')"
        echo "cache-primary-key=toolchain-${{ runner.os }}-${{ runner.arch }}-${RUST_VERSION}" >> "$GITHUB_OUTPUT"

    - id: toolchain-cache-restore
      name: Restore Cargo Cache (Local Restore)
      if: ${{ inputs.runner-label == 'self-hosted' }}
      uses: 0xmozak/local-cache/restore@ff33c7264117faa1bbd99aa0ddb467a9ccc3919e
      with:
        key: ${{ steps.get-info.outputs.cache-primary-key }}
        path: |
          ~/.cargo/git
          ~/.cargo/registry

    - id: toolchain-cache-save
      name: Persist Cargo Cache (Local Save)
      if: ${{ steps.toolchain-cache-restore.outputs.cache-hit != 'true' }}
      uses: 0xmozak/local-cache/save@ff33c7264117faa1bbd99aa0ddb467a9ccc3919e
      with:
        key: ${{ steps.get-info.outputs.cache-primary-key }}
        path: |
          ~/.cargo/git
          ~/.cargo/registry

    - id: local-cache
      name: Cache Rust artifacts (Local)
      uses: 0xmozak/rust-cache@d5f76b3ac4ba287ab299d4d3586d5cd11ad21cab
      with:
        prefix-key: ${{ inputs.cache-key != '' && inputs.cache-key || null }}
        cache-provider: "local"

    - name: Debug
      shell: bash
      run: echo cache-hit=${{ steps.local-cache.outputs.cache-hit }} partial-hit=${{ steps.local-cache.outputs.partial-hit }}

    - name: Cache Rust artifacts (Remote)
      uses: 0xmozak/rust-cache@d5f76b3ac4ba287ab299d4d3586d5cd11ad21cab
      if: ${{ steps.local-cache.outputs.cache-hit != 'true'}}
      with:
        require-full-match: ${{ steps.local-cache.outputs.partial-hit }}
        prefix-key: ${{ inputs.cache-key != '' && inputs.cache-key || null }}
