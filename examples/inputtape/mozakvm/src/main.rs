#![no_main]
#![allow(unused_attributes)]
#![feature(restricted_std)]

use inputtape_core_logic::{dispatch, MethodArgs, MethodReturns};
use mozak_sdk::call_receive;
use mozak_sdk::common::types::CrossProgramCall;
use rkyv::rancor::{Panic, Strategy};
use rkyv::Deserialize;

pub fn main() {
    let dummy_ser: &'static mut Vec<u8> = Box::leak(Box::new(vec![
        155, 4, 62, 94, 103, 163, 240, 38, 24, 159, 230, 244, 148, 86, 48, 127, 111, 27, 51, 49,
        213, 171, 69, 218, 151, 97, 91, 29, 214, 198, 153, 60, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 212, 108, 99, 65, 84, 106, 24, 105, 184, 75, 141, 198, 79, 241, 157, 131, 243, 132, 122,
        132, 136, 72, 47, 68, 34, 78, 90, 182, 110, 52, 184, 234, 34, 207, 174, 252, 146, 228, 237,
        185, 172, 255, 255, 255, 40, 0, 0, 0, 215, 174, 195, 64, 62, 156, 155, 198, 179, 88, 44,
        28, 60, 253, 162, 237, 137, 226, 223, 92, 125, 13, 101, 209, 129, 14, 191, 175, 44, 106,
        100, 56, 93, 233, 188, 27, 180, 203, 122, 159, 156, 249, 145, 163, 34, 48, 208, 20, 180,
        66, 116, 234, 84, 100, 163, 82, 240, 137, 168, 204, 204, 72, 105, 21, 144, 16, 28, 100,
        226, 129, 0, 121, 144, 252, 174, 84, 188, 255, 157, 178, 128, 54, 65, 149, 75, 162, 230,
        17, 199, 161, 205, 238, 139, 231, 128, 93, 0, 0, 155, 4, 62, 94, 103, 163, 240, 38, 24,
        159, 230, 244, 148, 86, 48, 127, 111, 27, 51, 49, 213, 171, 69, 218, 151, 97, 91, 29, 214,
        198, 153, 60, 0, 0, 0, 0, 0, 0, 0, 215, 174, 195, 64, 62, 156, 155, 198, 179, 88, 44, 28,
        60, 253, 162, 237, 137, 226, 223, 92, 125, 13, 101, 209, 129, 14, 191, 175, 44, 106, 100,
        56, 93, 233, 188, 27, 180, 203, 122, 159, 156, 249, 145, 163, 34, 48, 208, 20, 180, 66,
        116, 234, 84, 100, 163, 82, 240, 137, 168, 204, 204, 72, 105, 21, 155, 4, 62, 94, 103, 163,
        240, 38, 24, 159, 230, 244, 148, 86, 48, 127, 111, 27, 51, 49, 213, 171, 69, 218, 151, 97,
        91, 29, 214, 198, 153, 60, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 212, 108, 99, 65, 84,
        106, 24, 105, 184, 75, 141, 198, 79, 241, 157, 131, 243, 132, 122, 132, 136, 72, 47, 68,
        34, 78, 90, 182, 110, 52, 184, 234, 112, 254, 255, 255, 188, 0, 0, 0, 36, 255, 255, 255, 1,
        0, 0, 0, 212, 108, 99, 65, 84, 106, 24, 105, 184, 75, 141, 198, 79, 241, 157, 131, 243,
        132, 122, 132, 136, 72, 47, 68, 34, 78, 90, 182, 110, 52, 184, 234, 215, 174, 195, 64, 62,
        156, 155, 198, 179, 88, 44, 28, 60, 253, 162, 237, 137, 226, 223, 92, 125, 13, 101, 209,
        129, 14, 191, 175, 44, 106, 100, 56, 221, 254, 255, 255, 144, 0, 0, 0, 101, 255, 255, 255,
        1, 0, 0, 0, 96, 255, 255, 255, 2, 0, 0, 0,
    ]));
    // let dummy_archived_cpc_messages =
    //     rkyv::access::<Vec<CrossProgramCall>, Panic>(dummy_ser).unwrap();
}

// We define `main()` to be the program's entry point.
mozak_sdk::entry!(main);
